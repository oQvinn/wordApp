{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quinn\\\\Desktop\\\\Projects\\\\wordApp\\\\client\\\\src\\\\scenes\\\\homePage\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { Box, useMediaQuery } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport Navbar from \"scenes/navbar\";\nimport UserWidget from \"scenes/widgets/UserWidget\";\n\n/*\r\nHomePage component. Currently setup mainly for fullscreen setups, mobile screen sizing needs adjustment. \r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  //Defines that a non-mobile screen is >= 1000px \n  const isNonMobileScreens = useMediaQuery(\"(min-width:1000px)\");\n\n  //Grabs the id and picturePath from the application state, \"user\" is the collection of information of who's presently logged in.\n  const {\n    _id,\n    picturePath\n  } = useSelector(state => state.user);\n\n  /*\r\n  Returns a <Box> containing all the elements visible on the HomePage. All new widgets can be added following the format of\r\n  <Box><Widget><Box> for separating them from the other widgets, or <Box><Widget><Widget>...etc<Box> for multiple widgets in the\r\n  same section. Use the flexBasis modifier to adjust how much horizontal space the widget occupies.\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      width: \"100%\",\n      padding: \"2rem 6%\",\n      display: isNonMobileScreens ? \"flex\" : \"block\",\n      gap: \"0.5rem\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        flexBasis: isNonMobileScreens ? \"26%\" : undefined,\n        children: /*#__PURE__*/_jsxDEV(UserWidget, {\n          userId: _id,\n          picturePath: picturePath\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flexBasis: isNonMobileScreens ? \"68%\" : undefined,\n        mt: isNonMobileScreens ? undefined : \"2rem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), isNonMobileScreens && /*#__PURE__*/_jsxDEV(Box, {\n        flexBasis: \"26%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"J3+PZOVlf4lEBUgBVUL2nt3cpx8=\", false, function () {\n  return [useMediaQuery, useSelector];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["Box","useMediaQuery","useSelector","Navbar","UserWidget","jsxDEV","_jsxDEV","HomePage","_s","isNonMobileScreens","_id","picturePath","state","user","children","fileName","_jsxFileName","lineNumber","columnNumber","width","padding","display","gap","justifyContent","flexBasis","undefined","userId","mt","_c","$RefreshReg$"],"sources":["C:/Users/Quinn/Desktop/Projects/wordApp/client/src/scenes/homePage/index.jsx"],"sourcesContent":["import { Box, useMediaQuery } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Navbar from \"scenes/navbar\";\r\nimport UserWidget from \"scenes/widgets/UserWidget\";\r\n\r\n/*\r\nHomePage component. Currently setup mainly for fullscreen setups, mobile screen sizing needs adjustment. \r\n*/\r\n\r\nconst HomePage = () => {\r\n\r\n  //Defines that a non-mobile screen is >= 1000px \r\n  const isNonMobileScreens = useMediaQuery(\"(min-width:1000px)\");\r\n\r\n  //Grabs the id and picturePath from the application state, \"user\" is the collection of information of who's presently logged in.\r\n  const { _id, picturePath } = useSelector((state) => state.user);\r\n\r\n  /*\r\n  Returns a <Box> containing all the elements visible on the HomePage. All new widgets can be added following the format of\r\n  <Box><Widget><Box> for separating them from the other widgets, or <Box><Widget><Widget>...etc<Box> for multiple widgets in the\r\n  same section. Use the flexBasis modifier to adjust how much horizontal space the widget occupies.\r\n  */\r\n\r\n  return (\r\n    <Box>\r\n      <Navbar />\r\n      <Box\r\n        width=\"100%\"\r\n        padding=\"2rem 6%\"\r\n        display={isNonMobileScreens ? \"flex\" : \"block\"}\r\n        gap=\"0.5rem\"\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <Box flexBasis={isNonMobileScreens ? \"26%\" : undefined}>\r\n          <UserWidget userId={_id} picturePath={picturePath} />\r\n        </Box>\r\n        <Box\r\n          flexBasis={isNonMobileScreens ? \"68%\" : undefined}\r\n          mt={isNonMobileScreens ? undefined : \"2rem\"}\r\n        >\r\n          {/*Add widgets here */}\r\n        </Box>\r\n        {isNonMobileScreens && (\r\n          <Box flexBasis=\"26%\"></Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,aAAa,QAAQ,eAAe;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,UAAU,MAAM,2BAA2B;;AAElD;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB;EACA,MAAMC,kBAAkB,GAAGR,aAAa,CAAC,oBAAoB,CAAC;;EAE9D;EACA,MAAM;IAAES,GAAG;IAAEC;EAAY,CAAC,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;;EAE/D;AACF;AACA;AACA;AACA;;EAEE,oBACEP,OAAA,CAACN,GAAG;IAAAc,QAAA,gBACFR,OAAA,CAACH,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVZ,OAAA,CAACN,GAAG;MACFmB,KAAK,EAAC,MAAM;MACZC,OAAO,EAAC,SAAS;MACjBC,OAAO,EAAEZ,kBAAkB,GAAG,MAAM,GAAG,OAAQ;MAC/Ca,GAAG,EAAC,QAAQ;MACZC,cAAc,EAAC,eAAe;MAAAT,QAAA,gBAE9BR,OAAA,CAACN,GAAG;QAACwB,SAAS,EAAEf,kBAAkB,GAAG,KAAK,GAAGgB,SAAU;QAAAX,QAAA,eACrDR,OAAA,CAACF,UAAU;UAACsB,MAAM,EAAEhB,GAAI;UAACC,WAAW,EAAEA;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACNZ,OAAA,CAACN,GAAG;QACFwB,SAAS,EAAEf,kBAAkB,GAAG,KAAK,GAAGgB,SAAU;QAClDE,EAAE,EAAElB,kBAAkB,GAAGgB,SAAS,GAAG;MAAO;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGzC,CAAC,EACLT,kBAAkB,iBACjBH,OAAA,CAACN,GAAG;QAACwB,SAAS,EAAC;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAC3B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACV,EAAA,CAvCID,QAAQ;EAAA,QAGeN,aAAa,EAGXC,WAAW;AAAA;AAAA0B,EAAA,GANpCrB,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}